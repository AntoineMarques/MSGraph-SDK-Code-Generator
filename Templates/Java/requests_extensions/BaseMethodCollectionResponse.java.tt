<# // Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information. #>
<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ include file="BaseJavaModel.template.tt"#>
<#@ output extension="\\" #>
<#host.TemplateName = c.TypeCollectionResponse();#>
<#=writer.WriteHeader()#>
<#=host.CreatePackageDef()#>

import com.google.gson.JsonArray;
import com.google.gson.JsonObject;
import com.google.gson.annotations.SerializedName;
import com.google.gson.annotations.Expose;
<# var importNamespace = host.CurrentModel.GetNamespace().AddPrefix(); #>
import <#=importNamespace#>.serializer.IJsonBackedObject;
import <#=importNamespace#>.serializer.ISerializer;
import <#=importNamespace#>.serializer.AdditionalDataManager;
import <#=importNamespace#>.http.ICollectionResponse;

<#=TypeHelperJava.CreateClassDef(c.TypeCollectionResponse(), null, "ICollectionResponse<"+(c as OdcmMethod).OdcmMethodReturnType()+">, IJsonBackedObject")#>

    /**
     * The list of <#=(c as OdcmMethod).OdcmMethodReturnType()#> within this collection page
     */
    @SerializedName("value")
    @Expose
    public java.util.List<<#=(c as OdcmMethod).OdcmMethodReturnType()#>> value;

    /**
     * The list of <#=(c as OdcmMethod).OdcmMethodReturnType()#> within this collection page
     */
    @Override
    public java.util.List<<#=(c as OdcmMethod).OdcmMethodReturnType()#>> values() {
        return value;
    }

    @SerializedName("@odata.nextLink")
    @Expose(serialize = false)
    public String nextLink;

    @Override
    public String nextLink() {
        return nextLink;
    }

    private transient AdditionalDataManager additionalDataManager = new AdditionalDataManager(this);

    @Override
    public final AdditionalDataManager additionalDataManager() {
        return additionalDataManager;
    }

<#=TypeHelperJava.CreateRawJsonObject()#>
<# if ( ! ((c as OdcmMethod).ReturnType is OdcmPrimitiveType) && ! ((c as OdcmMethod).ReturnType is OdcmEnum) ) { #>
<#=    TypeHelperJava.UpdateListPropertiesWithinSetRawObject(new [] { "value" })#>
<# } else { #>
    }
<# } #>
}

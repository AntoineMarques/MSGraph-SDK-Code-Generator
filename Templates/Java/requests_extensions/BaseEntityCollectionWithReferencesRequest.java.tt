<# // Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information. #>
<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ include file="BaseJavaModel.template.tt"#>
<#@ output extension="\\" #>
<#host.TemplateName = c.TypeCollectionWithReferencesRequest();#>
<#=writer.WriteHeader()#>
<#=host.CreatePackageDef()#>

<# var mainNamespace = host.CurrentNamespace(); #>
import <#=mainNamespace#>.<#=c.GetPackagePrefix()#>.<#=c.TypeName()#>;
import <#=mainNamespace#>.<#=TypeHelperJava.GetPrefixForRequests()#>.<#=c.TypeWithReferencesRequest()#>;
import <#=mainNamespace#>.<#=TypeHelperJava.GetPrefixForRequests()#>.<#=c.TypeReferenceRequestBuilder()#>;
import <#=mainNamespace#>.<#=TypeHelperJava.GetPrefixForRequests()#>.<#=c.TypeWithReferencesRequestBuilder()#>;
import <#=mainNamespace#>.<#=TypeHelperJava.GetPrefixForRequests()#>.<#=c.TypeCollectionRequest()#>;
import <#=mainNamespace#>.<#=TypeHelperJava.GetPrefixForRequests()#>.<#=c.TypeCollectionWithReferencesRequest()#>;
import <#=mainNamespace#>.<#=TypeHelperJava.GetPrefixForRequests()#>.<#=c.TypeCollectionWithReferencesRequestBuilder()#>;
<# var importNamespace = host.CurrentModel.GetNamespace().AddPrefix(); #>
import <#=importNamespace#>.options.QueryOption;
import <#=importNamespace#>.core.IBaseClient;
import <#=importNamespace#>.http.BaseCollectionWithReferencesRequest;
import <#=importNamespace#>.http.BaseCollectionWithReferencesRequestBuilder;
import <#=importNamespace#>.concurrency.IExecutors;

<#=TypeHelperJava.CreateClassDef(c.TypeCollectionWithReferencesRequest(), "BaseCollectionWithReferencesRequest<"+c.TypeName()+", "+c.TypeWithReferencesRequest()+", "+c.TypeReferenceRequestBuilder()+", "+c.TypeWithReferencesRequestBuilder()+", "+c.TypeCollectionResponse()+", "+c.TypeCollectionWithReferencesPage()+", "+c.TypeCollectionRequest()+">")#>

    /**
     * The request builder for this collection of <#=c.TypeName()#>
     *
     * @param requestUrl     the request URL
     * @param client         the service client
     * @param requestOptions the options for this request
     */
    public <#=c.TypeCollectionWithReferencesRequest()#>(final String requestUrl, <#=TypeHelperJava.IBaseClientType()#> client, final java.util.List<? extends <#=importNamespace#>.options.Option> requestOptions) {
        super(requestUrl, client, requestOptions, <#=c.TypeCollectionResponse()#>.class, <#=c.TypeCollectionWithReferencesPage()#>.class, <#=c.TypeCollectionWithReferencesRequestBuilder()#>.class);
    }

<# if (c.GetFeatures().CanExpand) { #>
    public <#=c.TypeCollectionWithReferencesRequest()#> expand(final String value) {
        addExpandOption(value);
        return this;
    }

<# } #>
<# if (c.GetFeatures().CanFilter) { #>
    public <#=c.TypeCollectionWithReferencesRequest()#> filter(final String value) {
        addFilterOption(value);
        return this;
    }

<# } #>
<# if (c.GetFeatures().CanSort) { #>
    public <#=c.TypeCollectionWithReferencesRequest()#> orderBy(final String value) {
        addOrderByOption(value);
        return this;
    }

<# } #>
<# if (c.GetFeatures().CanSelect) { #>
    public <#=c.TypeCollectionWithReferencesRequest()#> select(final String value) {
        addSelectOption(value);
        return this;
    }

<# } #>
<# if (c.GetFeatures().CanUseTop) { #>
    public <#=c.TypeCollectionWithReferencesRequest()#> top(final int value) {
        addTopOption(value);
        return this;
    }

<# } #>
}

<# // Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information. #>
<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ include file="BaseJavaModel.template.tt"#>
<#@ output extension="\\" #>
<#host.TemplateName = c.ITypeCollectionRequest();#>
<#=writer.WriteHeader()#>
<#=host.CreatePackageDef()#>

<# var importNamespace = host.CurrentModel.GetNamespace().AddPrefix(); #>
import <#=importNamespace#>.http.IBaseCollectionPage;

<#=TypeHelperJava.CreateInterfaceDef(c.ITypeCollectionRequest())#>

    void get(final ICallback<<#=c.ITypeCollectionPage()#>> callback);

    <#=c.ITypeCollectionPage()#> get() throws ClientException;

    void post(final <#=c.TypeName()#> new<#=c.TypeName()#>, final ICallback<<#=c.TypeName()#>> callback);

    <#=c.TypeName()#> post(final <#=c.TypeName()#> new<#=c.TypeName()#>) throws ClientException;

<# if (c.GetFeatures().CanExpand) { #>
    /**
     * Sets the expand clause for the request
     *
     * @param value the expand clause
     * @return the updated request
     */
    <#=c.ITypeCollectionRequest()#> expand(final String value);

<# } #>
<# if (c.GetFeatures().CanSelect) { #>
    /**
     * Sets the select clause for the request
     *
     * @param value the select clause
     * @return the updated request
     */
    <#=c.ITypeCollectionRequest()#> select(final String value);

<# } #>
<# if (c.GetFeatures().CanUseTop) { #>
    /**
     * Sets the top value for the request
     *
     * @param value the max number of items to return
     * @return the updated request
     */
    <#=c.ITypeCollectionRequest()#> top(final int value);

<# } #>
<# if (c.GetFeatures().CanSkip) { #>
    /**
     * Sets the skip value for the request
     *
     * @param value of the number of items to skip
     * @return the updated request
     */
    <#=c.ITypeCollectionRequest()#> skip(final int value);

<# } #>
    /**
	 * Sets the skip token value for the request
	 * 
	 * @param skipToken value for pagination
     *
	 * @return the updated request
	 */
	<#=c.ITypeCollectionRequest()#> skipToken(String skipToken);
}
<#=PostProcess(c.ITypeCollectionRequest())#>